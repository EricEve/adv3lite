<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Final Moves &mdash; Some Output Issues</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="final.htm">Final Moves</a> &gt; 
Some Output Issues
<br><span class="navnp"><a class="nav" href="final.htm"><i>Prev:</i> Final Moves</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="webui.htm"><i>Next:</i> The Web UI</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">
<h1>Some Output Issues</h1>
<p>Outputting text to the screen in adv3Lite is mostly pretty straightforward. Since, unlike adv3, there is no transcript as such, text in a double-quoted string (or a say(txt) statement) is generally output straight to the screen, thereby obviated most of the output problems that can vex adv3 game authors.</p>

<p>About the one case you might have to worry about is text containing <a name="markup-idx">HTML markup</a>, especially if that markup contains quotation marks (e.g. &lt;FONT NAME=&quot;Verdana&quot;&gt;). The problem is that by default one of the adv3Lite output filters converts all straight quotes into "curly" or "typographical" quotes, so that " can become &ldquo; or &rdquo; and ' can become &lsquo; or &rsquo;, thereby messing up the HTML. This is also an issue with the aHref() function that can be used to produce clickable command links in your output (since it uses HTML markup).</p>

<p>There are two ways round this. One is to use the <strong>htmlSay(txt)</strong> function. This will output txt (given as a single-quoted string) without any conversion of straight quotes to typographical quotes, so it's safe to use with HTML markup or anything else that needs to preserve the straight quotes.</p>

<p>The other, which you need to use if you want to output text using a double-quoted string, is to disable and enable the cquotes output filter before and after outputting your text, like this:</p>

 <p><div class="code"><pre>
cquoteOutputFilter.deactivate();
"&lt;FONT name='Verdana'&gt;No curly quotes here!&lt;/FONT&gt;&quot;;
cquoteOutputFilter.activate();
</pre></div>

<p>The library makes use of a number of other output filters which you may occasionally find useful in your own game code. The most convenient way to use them is probably via the appropriate methods of outputManager.curOutputStream (which you can abbreviate to gOutStream):</p>

<ul>
<li><strong>watchForOutput(func)</strong>: Watch the stream for output.  It's sometimes useful to be able to call out to some code and determine whether or not the code  generated any text output.  This routine invokes the given callback function, monitoring the stream for output; if any occurs, we'll return true, otherwise we'll return nil. </li>
<li><strong>captureOutput(func, [args])</strong>:  Call the given function, capturing all text output to this stream in the course of the function call.  Return a string containing the captured text.</li>
</ul>

<p>A simple example of the second of these might be:</p>
 <p><div class="code"><pre>
  local str = gOutStream( {: "Hello World!" } );
  </pre></div>
<p>Which would result in str containing 'Hello World!'. A more practical example might be:</p>  
 <p><div class="code"><pre>
  local str = gOutStream( {: myObj.doSomething() } );
</pre></div>
<p>When we don't know in advance what output doSomething() will produce.</p>  
</div>
<hr class="navb"><div class="navb">
<i>adv3Lite Library Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="final.htm">Final Moves</a> &gt; 
Some Output Issues
<br><span class="navnp"><a class="nav" href="final.htm"><i>Prev:</i> Final Moves</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="webui.htm"><i>Next:</i> The Web UI</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>