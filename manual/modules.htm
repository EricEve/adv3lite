<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Core and Optional Modules</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="begin.htm">Opening Moves</a> &gt; 
Core and Optional Modules
<br><span class="navnp"><a class="nav" href="docs-intro.htm"><i>Prev:</i> Introduction and Overview</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="mingame.htm"><i>Next:</i> Minimal Game Definition</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">
<h1>Core and Optional Modules</h1>

<p>The adv3Lite library has been designed to be as modular as possible, so that if there are features of library you don't need for a particular game you can easily exclude them from the build (on how to do this, consult the System Manual). Some of the modules, however, are core to the library and must be included in every game. Moreover, a few of the optional modules require other optional modules to be present. In this section we list the core modules and offer a brief explanation of the optional ones.</p>
<p>Note that all modules, core and optional, are included in the library by default, so that all the features of the library are available to you when you start a new game. It's up to you do decide which features you don't need or want to use, and to opt out of them by excluding them from your build if you so wish.</p>

<a name="core"></a><h2>Core Modules</h2>

<p>In addition to the TADS 3 System files (the ones that some in the system.tl library file that is usually contained automatically in any TADS 3 complilation), any TADS 3 game built with the adv3Lite library <i>must</i> include the following files from the adv3Lite library:</p>

<ul>
<li>action.t</li>
<li>actions.t</li>
<li>banner.t *</li>
<li>command.t</li>
<li>console.t *</li>
<li>doer.t</li>
<li>debug.t **</li>
<li>debug_dynfunct.t **</li>
<li>input.t</li>
<li>lister.t</li>
<li>main.t</li>
<li>messages.t</li>
<li>modid.t</li>
<li>output.t</li>
<li>parser.t</li>
<li>precond.t</li>
<li>query.t</li>
<li>spelling.t</li>
<li>status.t</li>
<li>thing.t</li>
<li>travel.t</li>
<li>english.t ***</li>
<li>grammar.t ***</li>
<li>tokens.t ***</li>
</ul>


<p>* console.t and banner.t are required for traditional TADS 3 games played on an interpreter. These files are not included in the adv3LiteWeb library used for games to be played via the <a href="webui.htm">Web UI</a>; for web-based games browser.t is used in place of console.t, and banner.t is not used at all.</p>
<p>** The debug.t and debug_dynfunct.t files are only included in debug builds; they therefore have no effect on the size of the released game. Note that if you include dynfunc.t in your game you should <b>not</b> include debug_dynfunc.t, since the latter simply includes dynfunc.t in a game compiled for debugging, and you won't want it twice!</p>
<p>*** english.t, grammar.t and tokens.t are specific to English language games. Games written in another language would need to replace them with that other language's equivalents.</p>

<a name="optional"></a><h2>Optional Modules</h2>

<p>The following modules are optional, but (where noted below) may require the presence of other modules: </p>

<ul>
<li><b>actor.t:</b> Provides support for implementing NPCs including conversation and agenda items. Requires events.t and topicEntry.t.</li>
<li><b>attachables.t:</b> Implements classes for simple types of attachable, including SimpleAttachable, NearbyAttachable and Component.</li>
<li><b>eventList.t:</b> Implements various types of EventList (identical to those in the adv3 library).</li>
<li><b>events.t:</b> Implements fuses and daemons.</li>
<li><b>exits.t:</b> Implements the status line exit-lister and the EXITS command.</li>
<li><b>extras.t</b> Defines a whole load of classes such as Fixture, Container, Supporter and the like familiar from the adv3 library. Note that this file does not implement any substantial additional functionality, since the same effects can be obtained by defining various properties on Thing, but many authors will probably want to include this file for convenience and more readable code.</li>
<li><b>gadget.t:</b> Implements classes for control gadets such as buttons, levers and dials.</li>
<li><b>hintsys.t:</b> Implements a hint system (almost identical to that in adv3). Requires menusys.t and menucon.t</li>
<li><b>intruct.t</b>: Provides a game with a set of basic instructions on playing IF. Requires menusys.t and menucon.t to display instructions in menu format.</li>
<li><b>menusys.t</b> and <b>menucon.t:</b> Implement the system for displaying menus. Note that these two files must be included together (i.e. your game must include both or neither). In a net game menucon.t is replaced with menuweb.t.</li>
<li><b>pathfind.t:</b> Implements pathfinding, both for NPCs (if desired) and for the player character (via use of GO TO and CONTINUE commands).</li>
<li><b>scene.t:</b> Implements a Scenes mechanism similar to that found in Inform 7.</li>
<li><b>score.t:</b> Implements a scoring system identical to that in the adv3 library. Exclude this file to disable scoring if it is not relevant to your game.</li>
<li><b>senseRegion.t:</b> Implements the SenseRegion class which allows a game to define regions of two or more rooms with sensory connections between them.</li>
<li><b>topicEntry.t:</b> Implements the base class for Topic Entries along with the Consultable and ConsultTopic classes.</li>
<li><b>thoughts.t:</b> Provides the framework for a THINK ABOUT command. Requires topicEntry.t.</li>

</ul>

<p>


</div>
<hr class="navb"><div class="navb">
<i>adv3Lite Library Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="begin.htm">Opening Moves</a> &gt; 
Core and Optional Modules
<br><span class="navnp"><a class="nav" href="docs-intro.htm"><i>Prev:</i> Introduction</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="mingame.htm"><i>Next:</i> Minimal Game Definition</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>