<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Typographical Conventions</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="begin.htm">Opening Moves</a> &gt; 
Typographical Conventions
<br><span class="navnp"><a class="nav" href="intro.htm"><i>Prev:</i> Introduction</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="naming.htm"><i>Next:</i> Naming Conventions</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<h1>Typographical Conventions</h1>

<p>Like many technical manuals, this book uses some special
typographical effects to convey certain information.  We do this for
the sake of clarity and concision, but the trade-off is that readers
have to know our special conventions to understand what we're trying
to say.  This section provides a quick guide to our notation.

<p>The conventions we use are very similar to those of most other
software manuals.  There's no "official" standard for this sort of
notation, but the software industry has largely converged on some
common elements that cover most needs.  So, if you've ever used other
software books, you'll probably find that you're already familiar with
our notation.

<h2>Command Lines</h2>

<p>Example command lines are shown like this:

<p><div class="cmdline"><pre>
copy c:\*.* d:\backup
</pre></div>

<p>When you see something like this, it's an example of something
you'd type exactly as shown into your computer's command shell, or
into some other program's command line.  It's implied that you must
press the Enter or Return key when you're done typing a command line
like this.

<h2>Program Code</h2>

<p>We show example program code like this:

<p><div class="code"><pre>
#include &lt;tads.h&gt;
main(args)
{
   "Hello, world!\n";
}
</pre></div>

<p>This shows a snippet of code that you'd type into a source file,
exactly as shown.  Note that most examples like this are only
fragments of code - they're not meant to represent the entire contents
of a source file, but rather are just a portion pulled out to
illustrate the point being made.

<h2>Syntax Diagrams</h2>

<p>Throughout this manual, we need to explain the syntax for
certain things: program statements, command lines, control file
entries, and so on.  "Syntax" basically means grammar: it's the
set of rules governing the order and contents of a particular
piece of text input.

<p>To explain syntax, we often use "syntax diagrams."  These are
basically templates describing the rules of syntax for a particular
type of input.  In most cases, <i>parts</i> of a syntax diagram are
things that you type literally (that is, exactly as shown), while
other parts are just placeholders, indicating places in the input
where you'd substitute something else.  The "something else" is
usually limited in a way described in the rule - it might be that you
have to enter a number there, or the name of a file, or one of a few
special keywords.

<p>Note that we use both type style (italics, "typewriter" font) and
color to differentiate the roles of syntax elements.  The color is a
secondary feature, though - you can always tell the role of an element
by its type style alone.  We use colors to make it easier to read a
diagram at a glance, but we recognize that some people can't easily
differentiate certain colors, so we've designed the format so that
you can rely entirely on the type style if you need to.

<p><dt><span class=synLit>literal</span></dt>

<dd>When you see something like this, you have to enter it "literally" -
exactly as shown.</dd>

<p><dt><span class=synPar>param</span></dt>

<dd>This style indicates a "parameter."  This is a placeholder: you
don't literally type "param" here, but rather you enter something else
that the parameter stands for.  For example, <span
class=synPar>filename</span> might indicate that you substitute the
name of a file here, and <span class=synPar>number</span> might mean
that you have to enter a number.</dd>

<p><dt><span class=synMark>[ ]</span></dt>

<dd>Square brackets written like this indicate an item or items that
are <i>optional</i>.  You can either include the contents of the
brackets, or omit them entirely.</dd>

<p><dt><span class=synMark>...</span></dt>

<dd>An ellipsis written like this indicates that the preceding item
can be repeated one or more times.</dd>

<p><dt><span class=synMark>|</span></dt>

<dd>This indicates that you must choose one of the items on either
side of the bar.  This can be repeated to indicate that you must
choose one of three or more items.  For example:

<p><div class="syntax"><pre>
<span class=synLit>A</span> <span class=synMark>|</span> <span class=synLit>B</span> <span class=synMark>|</span> <span class=synLit>C</span> <span class=synMark>|</span> <span class=synLit>D</span>
</pre></div>

This mean that you must enter exactly one of A, B, C, or D.  The bar
applies out as far as the nearest enclosing parentheses or square
brackets.</dd>

<p><dt><span class=synMark>( )</span></dt>

<dd>Parentheses are used to group a set of "|" items.

<h3>Whitespace</h3>

<p>In most cases, the whitespace shown in these syntax diagrams isn't
significant.  That is, the spacing is just there to make the syntax
diagram easier to read; you don't have to enter it when you type your
input, but you can if you want.  This isn't universally true, though.
For example, there are times when a space is required, because it
would otherwise be impossible to tell where one item ended and the
next one started.  Usually, if there's a punctuation mark of some kind
separating two items, you don't need any extra spaces, since the
punctuation serves as a clear separator; if there's no punctuation
mark, you usually do need a space to separate two items.

<h3>Examples</h3>

Here are a couple of examples to illustrate how these diagrams
look in practice.

<p><div class="syntax"><pre>
<span class=synLit>copy</span> <span class=synMark>[</span> <span class=synLit>/b</span> <span class=synMark>|</span> <span class=synLit>/a</span> <span class=synMark>]</span>  <span class=synPar>sourceFile</span> <span class=synPar>destinationFile</span>
</pre></div>

<p>This is the basic syntax for the MS-DOS "copy" command.  It means
that you enter the word "copy" literally, followed by an
<i>optional</i> "/b" <i>or</i> "/a" switch, followed by a source and
destination filename.  Note that we've combined the "|" vertical
bar notation with the "[ ]" optional-item notation: everything within
the brackets is optional, but if you do include it, you must choose
one of the two options listed.

<p><div class="syntax"><pre>
<span class=synLit>ls</span> <span class=synMark>[</span> <span class=synLit>-l</span> <span class=synMark>]</span>  <span class=synMark>[</span> <span class=synPar>file</span> <span class=synMark>...</span> <span class=synMark>]</span> 
</pre></div>

<p>This is a minimal syntax for the Unix "ls" (list files) command.
It says that you type the word "ls" literally, followed by an optional
"-l" option, followed by an optional list of files.  Note that the
entire file list is optional, since it's enclosed in brackets.  In
addition, if you do type a file list, you can type any number of
files, as indicated by the ellipsis.


</div>
<hr class="navb"><div class="navb">
<i>TADS 3 System Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="begin.htm">Opening Moves</a> &gt; 
Typographical Conventions
<br><span class="navnp"><a class="nav" href="intro.htm"><i>Prev:</i> Introduction</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="naming.htm"><i>Next:</i> Naming Conventions</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
