<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Universal Paths</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="tools.htm">The Tools</a> &gt; 
Universal Paths
<br><span class="navnp"><a class="nav" href="build.htm"><i>Prev:</i> Compiling and Linking</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="aloneexe.htm"><i>Next:</i> Stand-Alone Executables</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<h1>Universal Paths</h1>

TADS has a "universal" syntax for file names that include directory
paths.  TADS translates from the universal notation to the local
file system syntax automatically, so you don't have to worry about
whether your Windows "X:\Y\Z" paths will work on a Linux machine,
or vice versa.

<p>TADS accepts the universal path syntax in several places:

<ul class=doublespace>

   <li><span class="code">#include</span> directives in TADS source files

   <li>File names in <a href="build.htm#projects">.t3m project files</a>

   <li>File and directory option arguments in .t3m files (-I, -o, -Os,
   -FL, -FI, -Fs, -Fy, -Fo, -Fa)

   <li><a href="file.htm#universalToLocal">File.universalToLocal()</a>

</ul>

<p>In all of these situations, when you specify a directory path to a
file, you should use the universal notation instead of your local
system's file path syntax.  TADS will translate for you, using the
appropriate local conventions.  This will make your code work the same
way everywhere TADS runs, without having to make changes when moving
the code to a new system.

<h2>Universal path rules</h2>

<p><b>Path separators:</b> "/" is the path separator.  For example,
to include a file <span class="code">defs.h</span> from subdirectory <span class="code">inc</span>, you'd write
<span class="code">#include "inc/defs.h"</span>.

<p><b>Relative paths:</b> For portability, use relative
paths whenever possible.  "Relative" means that the path is
interpreted starting from the current working directory or some other
context.  In the case of <span class="code">#include</span>, relative paths are relative to
the folder containing the source file with the <span class="code">#include</span> directive;
for .t3m files, paths are relative to the .t3m file's location.

<p>Relative paths improve portability because they adapt automatically
to different machines' directory structures.  If you move the program
to a new machine, you only have to reproduce the subdirectories of the
main program folder - everything is relative to that folder, so it's
all self-contained.  Importantly, it doesn't matter where that main
folder is situated within the system's overall directory structure.
If you keep the project in <span class="code">C:\My Documents\games\tads</span> on your
Windows machine, and you send it to someone who puts it in
<span class="code">/home/projects</span> on her Linux machine, the difference in absolute
location doesn't matter; it's only what's inside that directory that
matters.

<p><b>Current and parent paths:</b> The universal notation defines "."
and ".." to have the same meanings they do on Unix and Windows.  "."
is the current directory; as part of a path, it just reiterates the
preceding element, and as the first element of a path it explicitly
refers to the current directory.  ".." is the parent of the preceding
path element, or the parent of the current directory when ".."
appears at the start of a path.

<p>For example, <span class="code">../games/deep.gam</span> in the universal path notation
will translate on classic Mac OS to <span class="code">::games:deep.gam</span>.

<p><b>Absolute paths:</b> In some cases it's not possible to use a
relative path.  You should use relative paths when you can, but
when you can't, the universal notation can also accommodate "absolute"
paths.  An absolute path specifies an exact, fixed location in the
local file system.

<p>In the universal notation, an absolute path always starts with "/".
On systems like Windows that use a volume prefix (e.g., "C:"), write
the volume prefix as the first path element.  Include the full local
syntax - in the case of a Windows drive letter, include the colon.
For example, the Windows path <span class="code">C:\games\deep.gam</span> becomes
<span class="code">/C:/games/deep.gam</span> in the universal notation.

<p>The reason you should avoid absolute paths is that they're
inherently non-portable - not just between operating systems, but even
between two machines running the same OS.  An absolute path is
dependent upon the exact disk layout of your machine; if you take a
file containing an absolute path to someone else's machine, chances
are that their disk layout will be slightly different, so you'll
probably have to rewrite the absolute path to match their directory
structure.  That largely defeats the purpose of using the universal
path syntax in the first place.

<h2>Examples</h2>

<style type="text/css">
table.pathex {
    border-collapse: collapse;
    border: 1px solid #a0a0a0;
}

table.pathex th {
    border: 1px solid #a0a0a0;
}

table.pathex td {
    padding: 1ex 2em;
    border: 1px solid #a0a0a0;
}
</style>

<table class=pathex>

   <tr><th>System</th> <th>Local Path</th> <th>Universal Path</th></tr>

   <tr>
      <td>Windows</td>
      <td>games\deep\deep.gam</td>
      <td>games/deep/deep.gam</td>
   </tr>

   <tr>
      <td>Linux</td>
      <td>games/deep/deep.gam</td>
      <td>games/deep/deep.gam</td>
   </tr>

   <tr>
      <td>Windows</td>
      <td>..\deep.gam</td>
      <td>../deep.gam</td>
   </tr>

   <tr>
      <td>Classic Mac OS</td>
      <td>::deep.gam</td>
      <td>../deep.gam</td>
   </tr>

   <tr>
      <td>Classic Mac OS</td>
      <td>::</td>
      <td>..</td>
   </tr>

   <tr>
      <td>Classic Mac OS</td>
      <td>:::</td>
      <td>../..</td>
   </tr>

   <tr>
      <td>VMS</td>
      <td>[-.DOCS]DEEP.GAM</td>
      <td>../DOCS/DEEP.GAM</td>
   </tr>

   <tr>
      <td>Linux</td>
      <td>/home/games/deep.gam</td>
      <td>/home/games/deep.gam</td>
   </tr>

   <tr>
      <td>Windows</td>
      <td>c:\user\games\deep\deep.gam</td>
      <td>/c:/user/games/deep/deep.gam</td>
   </tr>

   <tr>
      <td>Windows</td>
      <td>\\SERVER\SHARE\games\deep.gam</td>
      <td>/\\SERVER/SHARE/games/deep.gam</td>
   </tr>

   <tr>
      <td>Classic Mac OS</td>
      <td>Mac HD:games:deep.gam</td>
      <td>/Mac HD:/games/deep.gam</td>
   </tr>

   <tr>
      <td>VMS</td>
      <td>SYS$DISK:[USER.DOCS]DEEP.GAM</td>
      <td>/SYS$DISK:/USER/DOCS/DEEP.GAM</td>
   </tr>

</table>

</div>
<hr class="navb"><div class="navb">
<i>TADS 3 System Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="tools.htm">The Tools</a> &gt; 
Universal Paths
<br><span class="navnp"><a class="nav" href="build.htm"><i>Prev:</i> Compiling and Linking</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="aloneexe.htm"><i>Next:</i> Stand-Alone Executables</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
