<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>T3 VM Notation and Conventions</title>

<link rel=stylesheet type="text/css" href="t3spec.css">


<link rel="stylesheet" href="../techman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="../topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="../toc.htm">Table of Contents</a> | 
<a class="nav" href="../t3spec.htm">T3 VM Technical Documentation</a> &gt; 
Notation and Conventions
<br><span class="navnp"><a class="nav" href="goals.htm"><i>Prev:</i> Design Goals</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="model.htm"><i>Next:</i> Machine Model</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<center><img src='t3logo.gif'></center>

<br><br>



<h2>Notation and Conventions</h2>

<p>
<b>Specification vs. Implementation:</b>  This document is meant as
a functional specification for the T3 VM, but also contains numerous
details of the reference implementation.  The inclusion of these
implementation details is not meant to imply that every implementation
must use the same internal architecture, but is meant to clarify
the specification.

<p>
<b>Image File, Load Image, Program Image:</b> These terms refer to
a file that contains a program that the VM can load and run.  (Despite
the terminology, no pictures or graphics are involved.  We call the
file an "image" because it contains a snapshot of memory for the
initial state of the program; the file contains other information as
well, so it's not truly a loadable image in the sense that it could
be copied byte-for-byte into memory for execution.)

<p>
<b>User Code, Byte Code:</b>  These terms are used to refer to code
written in the VM instruction set and loaded from a program image
file.  The actual source code to this byte code may be prepared
in any language for which a compiler that targets the T3 VM exists.

<p>
<b>C Code, Native Code:</b>  These terms are used to refer to the
fully-compiled code that comprises the interpreter.  These terms
are used interchangeably, and may actually refer to code written
in C, C++, assembler, or sometimes even another language; however,
whatever the source language, such code is compiled to machine
("native") code on each platform where the interpreter runs, and
hence the original source language is essentially irrelevant.

<p>
<b>Host Application Environment:</b>  The T3 VM is not a stand-alone
system; instead, it is meant to be embedded in an application.
Because of this, the VM does not provide a complete operating
environment; for example, it does not provide any built-in
mechanisms for performing input/output or interacting with a user.
What the VM does specify is a set of interfaces that the containing
application provides; the VM provides the user code with access
to the operating environment through these interfaces.

<p>
<b>Objects and TADS Objects:</b>  The T3 VM has two types of
"objects": a generic internal object type, which is the basic
unit of memory management in the VM; and the "TADS object,"
which is a particular class of the generic internal object
which implements inheritance and a property/value mechanism.
We refer to instances of this subclass as "TADS objects" because
this subclass directly implements the functionality exposed
through the object and class construct in the TADS language.

<div class=t3spec_version>
Copyright &copy; 2001, 2006 by Michael J. Roberts.<br>
Revision: September, 2006
</div>


</div>
<hr class="navb"><div class="navb">
<i>TADS 3 Technical Manual</i><br>
<a class="nav" href="../toc.htm">Table of Contents</a> | 
<a class="nav" href="../t3spec.htm">T3 VM Technical Documentation</a> &gt; 
Notation and Conventions
<br><span class="navnp"><a class="nav" href="goals.htm"><i>Prev:</i> Design Goals</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="model.htm"><i>Next:</i> Machine Model</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
