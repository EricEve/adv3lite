<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Workbench Project Starter Templates</title>

<link rel="stylesheet" href="techman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="advtop.htm">Advanced Topics</a> &gt; 
Workbench Project Starter Templates
<br><span class="navnp"><a class="nav" href="mediatypes.htm"><i>Prev:</i> Internet Media Types for TADS</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="t3spec.htm"><i>Next:</i> T3 VM Technical Documentation</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">
<h1>Workbench Project Starter Templates</h1>

<p>TADS Workbench for Windows features a "New Project" command that
generates all of the files necessary to compile and run a skeleton
game.  This saves the author the trouble of copying all of the
boilerplate for the .t3m and .t files making up the project.

<p>If you're creating your own library that's designed to replace Adv3,
Workbench provides a way for you to plug in your own project starter
templates so that Workbench users can just as easily create new
projects based on your library.  This section describes how to create
a project template.

<h2>Template file format</h2>

<p>When Workbench displays the New Project dialog, it offers a list of
project configurations for the user to choose from.  Each entry in
this list comes from a project starter template file, which has the
suffix <tt>.tdb-project-starter</tt>.  Workbench searches for all
files with this suffix in the Extensions folder, each folder in the
Library Paths list, and in the Workbench library folder.  (Workbench
searches all subfolders of each of these folders as well.)

<p>To create an entry for your library in the New Project dialog,
then, you just need to create a template file, and include it in
your library folder.

<p>The template file contains text in a special format, with
instructions for Workbench on how to create the project.  The
file uses a simple name/value pair format, with one item per
line.  An item looks like this:

<p><div class="code"><pre>
name: value
</pre></div>

<p>The <span class="code">name</span> must be at the very start of the line, with no
leading spaces.  If a line starts with one or more spaces, it's
read as a continuation of the previous line.  This allows you to
break up long values over several lines if needed for readability:

<p><div class="code"><pre>
name: This is a value that goes on for
  quite a while, requiring several lines
  to make it all fit neatly.
</pre></div>

<p>When Workbench reads the file, it joins these lines together
as though the value had appeared all on the same line.  Workbench
replaces each line break, along with all of the leading spaces on
the following line, with a single space.

<p>Here's a list of the <span class="code">name</span> elements and what they mean:

<ul class=doublespace>

   <li><span class="code">name</span>: The title of the project configuration.  This is
   displayed in the New Project dialog in the list of available
   project types.  You should use something short and descriptive;
   it doesn't have to be an exhaustive description, because the
   <span class="code">desc</span> value is also displayed in the same list.
   The standard project starters included with Workbench use these
   names:

   <ul>
      <li>Adv3 - Introductory
      <li>Adv3 - Advanced
      <li>Adv3 - Introductory - Web UI
      <li>Adv3 - Advanced - Web UI
      <li>Plain T3
   </ul>

   <li><span class="code">desc</span>: A detailed description of the project.  This is
   displayed in the New Project dialog, under the <span class="code">name</span>.  This
   should be a couple of sentences describing your library and
   the type of project this template would create.

   <li><span class="code">source</span>: The name of a source (.t) file that you provide
   as part of your library folder, that's meant to be <b>copied</b>
   into the user's new project folder.  The value for this item
   is the name of the file that you provide, optionally followed by
   a space and the name of the file as it should appear in the user's
   copy.  If you include only one name, the same name is used for
   the user's copy.  If you provide two names, the second name can
   use a dollar sign ($) as a substitution parameter: this is replaced
   with the project name that the New Project dialog asks the user to
   choose.  For example, suppose that the user enters "test one"
   as the project name.  If you enter this <span class="code">source</span> item:

   <p>
   <code>
   source: start.t $.t
   </code>

   <p>
   then the file <span class="code">start.t</span> that you provide in your library folder
   will be copied into the new project folder with the name <span class="code">test one.t</span>.

   <p>Note that the <span class="code">$</span> can be used anywhere in the target file name;
   it doesn't have to be the entire name.  For example, if you write
   <span class="code">$-actors.t</span> in the example above, the user's copy of the
   file would be <span class="code">test one-actors.t</span>.

   <p>You can use the <span class="code">source</span> item repeatedly, if you wish, to
   copy multiple source files to the new project folder.  Simply
   give each file a separate <span class="code">source</span> line.

   <p>You can place the source files to be copied into a subfolder
   of your library folder.  If you do, simply use a relative Windows-style
   path in the <span class="code">source</span> line:

   <p>
   <code>
   source: samples\start.t $.t
   </code>

   <p>Workbench adds the <span class="code">source</span> items to the new project's
   .t3m file in the same order in which they appear in the template file.

   <li><span class="code">lib</span>: The name of a source (.t) or library (.tl) file to
   include in the project's build list, but <b>without</b> copying
   it to the user's project folder.  This is for files that will be
   included in the project directly from your library.  As with
   <span class="code">source</span>, you can include as many <span class="code">lib</span> items as you like.

   <p>Workbench adds the files named in <span class="code">lib</span> items to the new project's
   .t3m in the same order in which they appear in the template file.

   <li><span class="code">sysfile</span>: The name of a <b>system</b> source (.t) or library (.tl)
   file to include in the project's build list.  This works just like
   <span class="code">lib</span>, except that these files are taken from the Workbench
   standard library folder rather than from your library folder.
   Use this for files like <span class="code">tok.t</span> or <span class="code">tadsnet.t</span> that come
   with the standard Workbench distribution.

   <li><span class="code">define</span>: A preprocessor symbol to define.  The value is
   a symbol, optionally followed by an equals sign (=) and the
   text to define for the symbol:

   <p>
   <code>
   define: LANGUAGE=en_us
   </code>

   <p>Workbench will generate the appropriate compiler option to
   define the symbol in the macro preprocessor when the user builds
   the project.  You can use as many <span class="code">define</span> options as you need;
   simply use a separate <span class="code">define</span> item for each symbol you wish
   to define.

   <li><span class="code">sequence</span>: A number giving the sorting order for this item.
   This is intended for use by the standard templates included with
   Workbench; replacement libraries should generally omit this.  When
   displaying the list of available project types, Workbench
   puts items with <span class="code">sequence</span> items at the top of the list, in
   order of their <span class="code">sequence</span> values, followed by the remaining
   items sorted in alphabetic order of their <span class="code">name</span> strings.  The
   intention is that standard system items are displayed first,
   followed by third-party libraries.

</ul>

<h2>Example</h2>

<p>Here's the template included with the standard Workbench installation
for the Introductory Adv3 Web UI project type.

<p><div class="code"><pre>
name: Adv3 - Introductory - Web UI
sequence: 3
desc: Create a game based on the Adv3 library for Web browser play.
  Your new project will be set up for deployment on Web servers, so
  that users can play in a browser without installing any TADS
  software.  This project starter includes a working game scenario 
  as an example to help you get started.
source: samples\startI3.t $.t
lib: adv3web.tl
sysfile: webui.tl
sysfile: tadsnet.t
define: TADS_INCLUDE_NET
define: LANGUAGE=en_us
define: MESSAGESTYLE=neu
</pre></div>


<h2>Installation</h2>

<p>To distribute your library, simply create a ZIP file with all
of your .t, .tl, and .tdb-project-starter files.  Instruct users
to install your library by following these steps:

<ul class=doublespace>

   <li>Run Workbench, and verify that the Extensions folder is set
   up.  This setting can be found by selecting the Tools - Options
   menu command and going to the System - Extensions pane.  The
   Workbench installer normally sets this to
   "My Documents\TADS 3\Extensions", but users can change it if
   they prefer to keep extensions somewhere else.  If there's no
   setting, the user should set it now.

   <li>Create a folder especially for your library in the Extensions
   folder.

   <li>Unzip your library files into the new folder.

</ul>

<p>There's no extra step to install your project template.  Simply
include the .tdb-project-starter file in the folder containing your
library's .t and .tl files.  Workbench automatically searches for
.tdb-project-starter files in the Extensions folder tree (including
sub-folders) and all of the folders in Library Paths list.

</div>
<hr class="navb"><div class="navb">
<i>TADS 3 Technical Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="advtop.htm">Advanced Topics</a> &gt; 
Workbench Project Starter Templates
<br><span class="navnp"><a class="nav" href="mediatypes.htm"><i>Prev:</i> Internet Media Types for TADS</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="t3spec.htm"><i>Next:</i> T3 VM Technical Documentation</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
