<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Extensions</title>

<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="final.htm">Final Moves</a> &gt; 
Extensions
<br><span class="navnp"><a class="nav" href="webui.htm"><i>Prev:</i> The Web UI</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="../learning/exercises.htm"><i>Next:</i> Exercises & Samples</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<h1>Extensions</h1>
<p>Extensions are a way of providing additional functionality without cluttering up the main library. In this version of adv3Lite three extensions are provided that in one way or another offer functionality available in adv3 but excluded from the main adv3Lite library. So, why make them extensions rather than optional modules in the adv3Lite library? There are three main reasons:</p>

<ol>
<li>If they were part of the main library, even as optional modules, they would look like more features that users of adv3Lite would need to learn, thus adding to the perceived complexity of the task. In fact no one needs to learn about any of these extensions unless and until they find themselves writing a game that actually requires them.</li>
<li>Although optional modules <em>can</em> be excluded from a game, the temptation will often be to leave them there, either because we don't get round to excluding them, or to leave them in 'just in case' or to make use of them just because they're there. This can lead to unnecessary-work for both game authors and players; for example, the room parts extensions is fairly simple, but if it's left in by default authors need to think about removing room parts that shouldn't be there, such as the east and west walls of a section of east-west passage, and players may waste a lot of time trying to interact with room parts that don't in fact do anything.</li>
<li>For most games, the absence of features offered by these extensions won't be missed by either players or game authors, so for most games they are best left out. Using an 'opt-in' method of extensions should help to ensure that they're only included in games that will actually benefit from them.</li>
</ol>

<p>If you find you do want to include one or more of these extensions in your game, the process is fairly straightforward. In Workbench you would select the Project -> Add File to Project option from the main menu (or right-click on the Source Files icon in the left-hand pane files list and select Add File from the context menu), and then navigate to the extensions directory under the adv3Lite directory to select the extension you want. You should then move it down the file list so that it comes after all the adv3Lite library files but before your own game code. If you're compiling from the command line you need to add the extension file names to your project (t3m) file in the equivalent place: between the library files and your own game code files, in the following manner:</p>

 <p><div class="code"><pre>
-lib system
-lib adv3Lite
-source extensions/roomparts
-source start

 </pre></div>

<p>The extensions currently distributed with adv3Lite are briefly described below, with links to more detailed documentation:</p>


<h2>Fueled Light Source</h2>
<p>The FueledLightSource mix-in class defined in this extension facilitates defining light sources that have a finite life, since they consume some kind of fuel every turn that they're lit. Most games are unlikely to make use of fueled light sources, but for those that do, it may be convenient not to have to reinvent this particular wheel. For more information see the documentation on <a href="../../extensions/docs/fueled.htm">fueled.t</a></p>

<h2>Postures</h2>
<p>The postures extension allows you to keep track of actor posture (standing, sitting or lying) and adds <strong>Bed</strong> and <strong>Chair</strong> classes that relate to these postures in particular ways. For more information see the documentation on <a href="../../extensions/docs/postures.htm">postures.t</a></p>



<h2>Room Parts</h2>
<p>The roomparts extension adds <a name="wall_idx">walls</a> and a <a name="ceiling_idx">ceiling</a> to every room, as well as a new <strong>OutdoorRoom</strong> class for rooms that have no walls and a sky instead of a ceiling. It also allows certain items in a room to be associated with particular room parts so that, for example, examining a wall might mention a picture that's notionally hanging there. For more details see the documentation on <a href="../../extensions/docs/roomparts.htm">roomparts.t.</a></p>


<h2>Sensory</h2>
<p>The Sensory extension provides fuller handling of Noises and Odors, and adds SensoryEvents, which are sudden sounds, smells or visible happenings to which nearby actors or objects can react. For more details see the documentation on <a href="../../extensions/docs/sensory.htm">sensory.t.</a></p>

<h2>TIAAction</h2>
<p>The TIAAction extension allows you to define actions involving three objects, such as PUT COIN IN SLOT WITH TWEEZERS. For more details see the documentation on <a href="../../extensions/docs/tiaaction.htm">tiaaction.t.</a> Note that it's possible to define actions involving two objects and a literal or a topic without this extension by using techniques outlined in the chapter on <a href="define.htm#threeobjects">Defining New Actions</a>.</p>

<h2>Viewport</h2>
<p>The Viewport extension allows you to define objects such as windows or CCTV screens that can be used to view remote locations and their contents when they're looked through or examined, without having a listing of the remote locations in question appearing in the room listing of the current room. This can be useful for implementing objects such as windows and CCTV screens where the player only becomes aware of what they show when s/he uses them. For more details see the documentation on <a href="../../extensions/docs/viewport.htm">viewport.t</a>. </p>

</div>
<hr class="navb"><div class="navb">
<i>Adv3Lite Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="final.htm">Final Moves</a> &gt; 
Extensions
<br><span class="navnp"><a class="nav" href="webui.htm"><i>Prev:</i> The Web UI</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="../learning/exercises.htm"><i>Next:</i> Feedback</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
