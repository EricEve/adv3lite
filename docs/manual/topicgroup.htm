<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Actors &mdash; Topic Groups</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="actor.htm">Actors</a> &gt; 
Topic Groups
<br><span class="navnp"><a class="nav" href="specialtopic.htm"><i>Prev:</i> Special Topics</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="convnode.htm"><i>Next:</i> Conversation Nodes</a> &nbsp;&nbsp;&nbsp; </span>
</div>
<div class="main">
<h1>Topic Groups</h1>

<p>A Topic Group is simply a way of grouping together ActorTopicEntries that have certain characteristics in common. A TopicGroup can appear anywhere an ActorTopicEntry can appear, and the ActorTopicEntries it groups togetther are then located directly within it.</p>

<p>In particular, a TopicGroup defines the following properties:</p>

<ul>
<li><strong>isActive</strong>: For an ActorTopicEntry to be active both its own isActive property and the isActive property of any TopicGroup to which it belongs must be true. The isActive property of a TopicGroup can therefore be used to specify a common isActive condition for a group of ActorTopicEntries.</li>
<li><strong>convKeys</strong>: Any convKeys defined on a TopicGroup are added to the convKeys of all the ActorTopicEntries it contains.</li>
<li><strong>scoreBoost</strong>: Any scoreBoost defined on a TopicGroup is added to the scoreBoost of all the ActorTopicEntries it contains (provided their scoreBoost property is defined as a simple integer).</li>
<li><strong>nodeActive</strong>: The nodeActive method of a TopicGroup returns true if one of its own convKeys is that of an active node.</li>
</ul>

<p>A TopicGroup can be of particular use for defining Conversation Nodes: the <a href="convnode.htm#convnode">ConvNode</a> subclass of TopicGroup is provided especially for this purpose.</p>

<p>The TopicGroup template is defined as <span class="code">+scoreBoost? 'convKeys' | [convKeys] ?</span>, so that both the scoreBoost and the convKeys properties can be readily defined through the template. Consider the following example:</p>

<p><div class="code"><pre>
+ TopicGroup +10 'alice-info'
   isActive = gRevealed('alice')
;

++ AskTopic @tAlice
    "&lt;q&gt;Who is this Alice, anyway?&lt;/q&gt;
     &lt;q&gt;Lots of folk would like to know that,&lt;/q&gt; he replies, scratching his head. "
;
 
 
++ QueryTopic 'where' 'he heard about alice; did you hear'
   "&lt;q&gt;Where did you hear about this Alice person?&lt;/q&gt; you enquire. 
    &lt;q&gt;From the old vicar,&lt;/q&gt; he tells you. "
;
</pre></div>

<p>This adds the 'alice-info' convKey to both the TopicEntries defined above, and ensures that they are only active when the 'alice' tag has been revealed. It also boosts their matchScore by 10 (which might help ensure, for example, that the QueryTopic is reached in preference to another when the player types a partial query like WHERE HEAR).</p> 
 
 

</div>
<hr class="navb"><div class="navb">
<i>adv3Lite Library Manual</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="actor.htm">Actors</a> &gt; 
Topic Groups
<br><span class="navnp"><a class="nav" href="specialtopic.htm"><i>Prev:</i> Special Topics</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="convnode.htm"><i>Next:</i> Conversation Nodes</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>