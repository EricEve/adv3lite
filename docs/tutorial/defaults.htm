<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>The Art of Conversation &mdash; Diverse Defaults</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="conversation.htm">The Art of Conversation</a> &gt; 
Diverse Defaults
<br><span class="navnp"><a class="nav" href="convnode.htm"><i>Prev:</i> Angela Wants Answers</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="convsumm.htm"><i>Next:</i> Summary</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">
<h1>Diverse Defaults</h1>

<p>The one obvious thing that's missing from Angela's conversational repertoire is a stock of default responses to conversational commands we haven't otherwise catered for. Since she's a rather more elaborate NPC than either Cortez or the security guard, she probably deserves a rather more elaborate set of default responses, and even, perhaps, responses that vary according to circumstances, as well as responses that at least vary a little according to the command used.</p>

<h2>Some Standard Cases</h2>

<p>We'll start with a couple of straightforward ones. In this game Angela won't respond usefully to requests of the form ASK ANGELA FOR X or to orders of the form ANGELA, DO X, so we'll rule both these out with straightforward refusals implemented as DefaultTopics directly located in Angela. First the <strong>DefaultAskForTopic</strong> to field, ASK ANGELA FOR SUCH-AND-SUCH:</p>

 <p><div class="code"><pre>
+ DefaultAskForTopic
    "{The subj angela} listens to your request and shakes her head. &lt;q&gt;Sorry, I
    can't help you with that,&lt;/q&gt; she says. "
;
</pre></div>

<p>Commands issued to an NPC can be handled by CommandTopics (for details, see the section on <a href="../manual/orders.htm">Giving Orders to NPCs</a> in the <em>adv3Lite Library Manual</em>). For our purposes, though, we only need a single <strong>DefaultCommandTopic</strong> to handle all attempts by the player to give orders to Angela. Within a CommandTopic or DefaultCommandTopic we can use the method <span class="code">actionPhrase()</span> to give at least a reasonable approximation to the actual words that might be spoken to give the command. Our DefaultCommandTopic might therefore look like this:</p>

 <p><div class="code"><pre>
+ DefaultCommandTopic
    "&lt;q&gt;&lt;&lt;if angela.proper&gt;&gt;Angela&lt;&lt;else&gt;&gt;Miss&lt;&lt;end&gt;&gt;, would you
    &lt;&lt;actionPhrase&gt;&gt;, please?&lt;/q&gt; you request.\b
    In reply she merely cocks an eyebrow at you and looks at you as if to say,
    &lt;q&gt;Who do you think you're talking to?&lt;/q&gt; "
;
</pre></div>

<p>Note that we also make use of an embedded <span class="code">&lt;&lt;if&gt;&gt;</span> expression so that the player character addresses Angela as either "Angela" or "Miss" depending on whether or not he's learned her name.</p>

<p>It's probably also no bad idea to have a <strong>DefaultAnyTopic</strong> to catch anything that slips through all the other DefaultTopics we're about to go on and define:</p>

 <p><div class="code"><pre>
+ DefaultAnyTopic
    "{The subj angela} smiles and shrugs. "  
;
</pre></div>

<p>We can also write a general-purpose <strong>DefaultGiveShowTopic</strong> to field attempts to GIVE or SHOW something to Angela:</p>

 <p><div class="code"><pre>
+ DefaultGiveShowTopic
    "You offer {the angela} {the dobj}, but she shakes her head and pushes {him
    dobj} away, saying, &lt;q&gt;I'm afraid I can't accept {that dobj} from you,
    sir.&lt;/q&gt; "
;
</pre></div>

<p>Here we take advantage of the fact that the object the player character is attempting to give or show will always be the direct object of the command. That means we can use <span class="code">dobj</span> in message parameter substitutions to get at the name and the correct pronoun for whatever the player character tried to give. There is one little problem with our DefaultGiveShowTopic the way we've defined it, however: the response it gives when the player character tries to show Angela something that's fixed in place, such as the cockpit door, is liable to look more than a little odd. One solution is to define a <strong>DefaultShowTopic</strong> that's active when what's being shown is fixed in place:</p>

 <p><div class="code"><pre>
+ DefaultShowTopic
    "You point towards {the dobj}.\b
    &lt;q&gt;Very interesting, I'm sure, sir,&lt;/q&gt; {the subj angela} remarks without
    much enthusiasm. "
    
    isActive = gDobj.isFixed
;
</pre></div>

<p>This works because being slightly more specific than a DefaultGiveShowTopic, a DefaultShowTopic has a higher matchScore, and so will be chosen in preference to the DefaultGiveShowTopic when the direct object of the command is fixed. We don't have to worry about an attempt to GIVE Angela something that's fixed in place since the library will rule that out in any case (something has to be carried to be given, and you can't carry something that's fixed).</p>
<br>

<h2>Ringing the Changes</h2>

<p>We've now dealt with several of the common kinds of DefaultTopic, but there are many others. For a complete list see the section on <a href="../manual/actortopicentry.htm#default">ActorTopicEntry</a> in the <em>adv3Lite Library Manual</em>. Fortunately for our purposes (and probably for those of many other games) we don't need to worry about all of these types, many of which overlap with one another in any case. For our purposes it should suffice to define (in addition to what we already have) a <strong>DefaultAskQueryTopic</strong> to field questions, and a <strong>DefaultSayTellTalkTopic</strong> to field statements. The former will deal with any command that begins with ASK or with any of the query words such as WHO, WHAT, WHY, WHEN or HOW while the latter will deal with TELL ANGELA ABOUT X or TALK ABOUT X or SAY X, i.e. with any attempt to impart information. For most purposes having a DefaultTopic to field questions and another to field statements should suffice, without our needing to worry about sub-types of each.</p>

<p>But is one of each enough? It might give Angela a bit more characterization if the way she responds to questions and statements varies according to the state she's in. We might be tempted, then, to put her DefaultAskQueryTopics and her DefaultSayTellTalkTopics in her various ActorStates; but this could be a mistake. The potential problem is this: if we place a DefaultTopic in an ActorState it will mask any TopicEntries of the same kind directly in the Actor (for example, a <span class="code">DefaultAskQueryTopic</span> in the current ActorState will be used in preference to any AskTopics or TellTopics in the current Actor, except when some convKeys are active). Sometimes this may be what we want, for example, if an NPC becomes so preoccupied that he or she ceases to be responsive. In other cases it may not be at all what we want, since we want any more specific TopicEntries defined directly on the Actor to still be available. With Angela, we have the second kind of situation, since we probably want the TopicEntries located directly in the angela actor object to be available all the time.</p>

<p>The way to handle this is to define our state-dependent DefaultTopics not on the ActorState (as might seem most natural) but located directly within the Actor, and then to use their isActive property to make them active only when the actor is in a particular state. If we want to define more than one DefaultTopic associated with a particular ActorState, it may be convenient to use a TopicGroup for the purpose so we only need to define the isActive property once. While we're at it, it would also be a good idea to define a modest scoreBoost on the TopicGroup to ensure that the DefaultTopics defined under it are used in preference to any other when it is active; a scoreBoost of 5 should suffice. This scheme also allows for considerable flexibility; for example we could define DefaultTopics that are shared by two or more ActorStates, or which only come into play when other conditions are satisfied.</p>

<p>Consider the case when Angela is first greeting passengers boarding the plane. Before the player character shows her his ticket, her most likely default response will be to ask to see it; once she's seen the ticket, she'll be more anxious to get the player character to take a seat so she can deal with the next passenger or so that the plane can be readied for takeoff. Thus, when Angela is in angelaGreetingState we actually want two groups of conversational DefaultTopics, which we could define like so:</p>

 <p><div class="code"><pre>
+ TopicGroup +5
    isActive = angela.curState == angelaGreetingState &&
    !angelaGreetingState.ticketSeen
;

++ DefaultAskQueryTopic
    "&lt;q&gt;I really need to see your ticket, sir,&lt;/q&gt; she insists &lt;&lt;one
      of&gt;&gt;politely&lt;&lt;or&gt;&gt;once more&lt;&lt;stopping&gt;&gt;. "
;

++ DefaultSayTellTalkTopic
    "{The subj angela} listens &lt;&lt;one of&gt;&gt;politely&lt;&lt;or&gt;&gt;a little impatiently
    &lt;&lt;stopping&gt;&gt; to what you have to say, then replies, &lt;q&gt;May I see your
    ticket, sir?&lt;/q&gt; "
;

+ TopicGroup +5
    isActive = angela.curState == angelaGreetingState &&
    angelaGreetingState.ticketSeen
;

++ DefaultAskQueryTopic
    "&lt;q&gt;If you have any further questions perhaps you could ask them once we're
    in flight,&lt;/q&gt; she &lt;&lt;one of&gt;&gt;suggests&lt;&lt;or&gt;&gt;repeats&lt;&lt;stopping&gt;&gt;. &lt;q&gt;&lt;&lt;one
      of&gt;&gt;It would be best if you moved &lt;&lt;or&gt;&gt;Please move&lt;&lt;stopping&gt;&gt; to the
    rear of the plane and &lt;&lt;one of&gt;&gt;took&lt;&lt;or&gt;&gt;take&lt;&lt;stopping&gt;&gt; your seat now,
    sir.&lt;/q&gt; "
;

++ DefaultSayTellTalkTopic
    "{The subj angela} holds up her hand to stop you in mid-flow. &lt;q&gt;Can I ask
    you to move to the rear of your plane and take your seat now, sir?&lt;/q&gt; she
    &lt;&lt;one of&gt;&gt;requests&lt;&lt;or&gt;&gt;repeats&lt;&lt;or&gt;&gt;insists&lt;&lt;stopping&gt;&gt;. "
;
</pre></div>

<p>Since at this stage the flight attendant is focused almost entirely on seeing passengers' tickets and getting them seated, there's not much need to vary her default responses here; we simply use the <span class="code">&lt;&lt;one of&gt;&gt; ... &lt;&lt;stopping&gt;&gt;</span> embedded expression to supply some minimal variation to avoid Angela appearing totally robotic. Note the subtle difference between the isActive properties of the two TopicGroups: the first has a <strong>!</strong> (negation symbol) at the start of the second line, whereas the second does not.</p>

<p>We can do something similar for the angelaTalkingState, but here we only need one group of DefaultTopics. At this point Angela is surrounded by the passengers who have just been thrown off the plane, so she'll be a bit preoccupied with attending to them, and her default responses can reflect that. Since players tend to ASK more than they TELL, we can probably get away with one default response for say/tell/talk, but we should provide some variety of responses to asking unimplemented questions:</p>


 <p><div class="code"><pre>
+ TopicGroup +5
    isActive = angela.curState == angelaTalkingState
;

++  DefaultAskQueryTopic, ShuffledEventList
    [
        '{The subj angela} mutters something inaudible and looks round, as if
        dropping a heavy hint that she has other people besides you to attend
        to. ',
        
        '&lt;q&gt;Maybe we can discuss that some other time,&lt;/q&gt; she suggests, with
        a significant glance at the other passengers anxious to attract her
        attention. ',
        
        '&lt;q&gt;Hm, well,&lt;/q&gt; she says, in a tone of voice that rather suggests
        she has more urgent things on her mind. ',
        
        '&lt;q&gt;I think perhaps...&lt;/q&gt; she begins, and then trails off as one of the
        other passengers taps her on the arm in an attempt to grab her
        attention. '
    ]
;

++ DefaultSayTellTalkTopic
    "{The subj angela} listens to what you have to say without comment, but with
    the air of one who has other things on her mind. "
;
</pre></div>

<p>The DefaultTopics for angelaSeatedState, when Angela and the player character are both back aboard the plane, with the likes of Pablo Cortez occupying the passenger seats, can follow much the same pattern, except that here Angela's main concern will be with the type of people who may overhear the conversation:</p>

 <p><div class="code"><pre>
+ TopicGroup +5
    isActive = angela.curState == angelaSeatedState
;

++ DefaultAskQueryTopic, ShuffledEventList
    [
        '{The subj angela} lowers her voice and swivels her eyes just enough to
        remind you of the other people in earshot. &lt;q&gt;Perhaps we should discuss
        that some other time,&lt;/q&gt; she suggests. ',
        
        '&lt;q&gt;I don\'t think I care to answer that right now,&lt;/q&gt; she replies,
        with just enough movement of the head to indicate how easily you might
        be overheard by the hoodlums in the other passenger seats. ',
        
        '&lt;q&gt;I think...&lt;/q&gt; she begins, and then breaks off. &lt;q&gt;I think this may
        not be the best time to talk about that,&lt;/q&gt; she concludes. ',
        
        '&lt;q&gt;Hm,&lt;/q&gt; she says, &lt;q&gt;right.&lt;/q&gt; It\'s obviously intended as a
        non-answer, perhaps because she\'s worried about who else might hear
        what she says. '       
    ]
;

++ DefaultSayTellTalkTopic
    "{The subj angela} merely listens, looking faintly disapproving at your
    garrulousness. "
;
</pre></div>
</div>

<hr class="navb"><div class="navb">
<i>adv3Lite Library Tutorial</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="conversation.htm">The Art of Conversation</a> &gt; 
Diverse Defaults
<br><span class="navnp"><a class="nav" href="convnode.htm"><i>Prev:</i> Angela Wants Answers</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="convsumm.htm"><i>Next:</i> Summary</a> &nbsp;&nbsp;&nbsp; </span>



</div>
</body>
</html>