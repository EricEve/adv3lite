<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>The Art of Conversation &mdash; Diverse Defaults</title>
<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="conversation.htm">The Art of Conversation</a> &gt; 
Diverse Defaults
<br><span class="navnp"><a class="nav" href="convnode.htm"><i>Prev:</i> Angela Wants Answers</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="defaults.htm"><i>Next:</i> Diverse Defaults</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">
<h1>Diverse Defaults</h1>

<p>The one obvious thing that's missing from Angela's conversational repertoire is a stock of default responses to conversational commands we haven't otherwise catered for. Since she's a rather more elaborate NPC than either Cortez or the security guard, she probably deserves a rather more elaborate set of default responses, and even, perhaps, responses that vary according to circumstances, as well as responses that at least vary a little according to the command used.</p>

<h2>Some Standard Cases</h2>

<p>We'll start with a couple of straightforward ones. In this game Angela won't respond usefully to requests of the form ASK ANGELA FOR X or to orders of the form ANGELA, DO X, so we'll rule both these out with straightforward refusals implemented as DefaultTopics directlty located in Angela. First the <strong>DefaultAskForTopic</strong> to field, ASK ANGELA FOR SUCH-AND-SUCH:</p>

 <p><div class="code"><pre>
+ DefaultAskForTopic
    "{The subj angela} listens to your request and shakes her head. &lt;q&gt;Sorry, I
    can't help you with that,&lt;/q&gt; she says. "
;
</pre></div>

<p>Commands issued to an NPC can be handled by CommandTopics (for details, see the section on <a href="../manual/orders.htm">Giving Orders to NPCs</a> in the <em>adv3Lite Library Manual</em>). For our purposes, though, we only need a single <strong>DefaultCommandTopic</strong> to handle all attempts by the player to give orders to Angela. Within a CommandTopic or DefaultCommandTopic we can use the method <span class="code">actionPhrase()</span> to give at least a reasonable approximation to the actual words that might be spoken to give the command. Our DefaultCommandTopic might therefore look like this:</p>

 <p><div class="code"><pre>
+ DefaultCommandTopic
    "&lt;q&gt;&lt;&lt;if angela.proper&gt;&gt;Angela&lt;&lt;else&gt;&gt;Miss&lt;&lt;end&gt;&gt;, would you
    &lt;&lt;actionPhrase&gt;&gt;, please?&lt;/q&gt; you request.\b
    In reply she merely cocks an eyebrow at you and looks at you as if to say,
    &lt;q&gt;Who do you think you're talking to?&lt;/q&gt; "
;
</pre></div>

<p>Note that we also make use of an embedded <span class="code">&lt;&lt;if&gt;&gt;</span> expression so that the player character addresses Angela as either "Angela" or "Miss" depending on whether or not he's learned her name.</p>

<p>It's probably also no bad idea to have a <strong>DefaultAnyTopic</strong> to catch anything that slips through all the other DefaultTopics we're about to go on and define:</p>

 <p><div class="code"><pre>
+ DefaultAnyTopic
    "{The subj angela} smiles and shrugs. "  
;
</pre></div>

<p>We can also write a general-purpose <strong>DefaultGiveShowTopic</strong> to field attempts to GIVE or SHOW something to Angela:</p>

 <p><div class="code"><pre>
+ DefaultGiveShowTopic
    "You offer {the angela} {the dobj}, but she shakes her head and pushes {him
    dobj} away, saying, &lt;q&gt;I'm afraid I can't accept {that dobj} from you,
    sir.&lt;/q&gt; "
;
</pre></div>

<p>Here we take advantage of the fact that the object the player character is attempting to give or show will always be the direct object of the command. That means we can use <span class="code">dobj</span> in messenger parameter substitutions to get at the name and the correct pronoun for whatever the player character tried to give. There is one little problem with our DefaultGiveShowTopic the way we've defined it, however: the response it gives when the player character tries to show Angela something that's fixed in place, such as the cockpit door, is liable to look more than a little odd. One solution is to define a <strong>DefaultShowTopic</strong> that's active when what's being shown is fixed in place:</p>

 <p><div class="code"><pre>
+ DefaultShowTopic
    "You point towards {the dobj}.\b
    &lt;q&gt;Very interesting, I'm sure, sir,&lt;/q&gt; {the subj angela} remarks without
    much enthusiasm. "
    
    isActive = gDobj.isFixed
;
</pre></div>

<p>This works because being slightly more specific than a DefaultGiveShowTopic, a DefaultShowTopic has a higher matchScore, and so will be chosen in preference to the DefaultGiveShowTopic when the direct object of the command is fixed. We don't have to worry about an attempt to GIVE Angela something that's fixed in place since the library will rule that out in any case (something has to be carried to be given, and you can't carry something that's fixed).</p>
<br>

<h2>Ringing the Changes</h2>

<p>We've now dealt with a several of the common kinds of DefaultTopic, but there are many others. For a complete list see the section on <a href="../manual/actortopicentry.htm#default">ActorTopicEntry</a> in the <em>adv3Lite Library Manual</em>. Fortunately for our purposes (and probably for those of many other games) we don't need to worry about all of these types, many of which overlap with one another in any case. For our purposes it should suffice to define (in addition to what we already have) a <strong>DefaultAskQueryTopic</strong> to field questions, and a <strong>DefaultSayTellTalkTopic</strong> to field statements. The former will deal with any command that begins with ASK or with any of the query words such as WHO, WHAT, WHY, WHEN or HOW while the latter will deal with TELL ANGELA ABOUT X or TALK ABOUT X or SAY X, i.e. with any attempt to impart information. For most purposes having a DefaultTopic to field questions and another to field statements should suffice, without our needing to worry about sub-types of each.</p>

<p>But is one of each enough? It might give Angela a bit more characterization if the way she responds to questions and statements varies according to the state she's in. We might be tempted, then, to put her DefaultAskQueryTopics and her DefaultSayTellTalkTopics in her various ActorStates; but this would be a mistake.</p>


</div>

<hr class="navb"><div class="navb">
<i>adv3Lite Library Tutorial</i><br>
<a class="nav" href="toc.htm">Table of Contents</a> | 
<a class="nav" href="conversation.htm">The Art of Conversation</a> &gt; 
Diverse Defaults
<br><span class="navnp"><a class="nav" href="convnode.htm"><i>Prev:</i> Angela Wants Answers</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="defaults.htm"><i>Next:</i> Diverse Defaults</a> &nbsp;&nbsp;&nbsp; </span>



</div>
</body>
</html>