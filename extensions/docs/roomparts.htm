<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Room Parts</title>

<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="../../docs/manual/topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="../../docs/manual/toc.htm">Table of Contents</a> | 
<a class="nav" href="../../docs/manual/extensions.htm">Extensions</a> &gt; 
Room Parts
<br><span class="navnp"><a class="nav" href="relations.htm"><i>Prev:</i> Relations</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="rules.htm"><i>Next:</i> Rules</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<h1>Room Parts</h1>
<h2>Overview</h2>
<p>The purpose of the <a href="../roomparts.t">roomparts.t</a> extension is to provide walls and a ceiling for every indoor room and a sky for every outdoor room. The parts that appear in any particular room can be customized. It is also possible to associate particular objects in a room with a particular room part, such that examining the room part causes mention of any associated objects.</p>
<br>

<a name="classes"></a>
<h2>New Classes, Objects and Properties</h2>
<p>In addition to a number of properties intended purely for internal use, this extension defines the following new classes, objects and properties:</p>
<ul>
<li><em>Classes</em>: <strong>OutdoorRoom</strong>, <strong>RoomPart</strong>, <strong>DefaultWall</strong> and <strong>Ceiling</strong>.</li>
<li><em>Objects</em>: defaultNorthWall, defaultEastWall, defaultSouthWall, defaultWestWall, defaultCeiling and defaultSky.</li>
<li><em>Additional properties on Room (and OutdoorRoom)</em>: <span class="code">ceilingObj</span> and <span class="code">wallObjs</span>.</li>
<li><em>Additional properties on Thing</em>: <span class="code">roomPart</span> and <span class="code">roomPartDesc</span>.</li>
</ul>
<br>

<a name="usage"></a>
<h2>Usage</h2>
<p>Include the roomparts.t file after the library files but before your game source files.</p>

<p>By default, the extension will add four walls and a ceiling to every Room in the game (note that the adv3Lite already adds a floor to every Room in the game). Obviously, if you have any rooms that are meant to be outdoors, this won't be appropriate; for that reason the extension defines an <strong>OutdoorRoom</strong> class that can be used for outdoor locations. And OutdoorRoom comes only with a sky (in addition to the defaultFloor already provided by adv3Lite).</p>

<p>You can customize which room parts an individual Room has by overriding its <strong>ceilingObj</strong> and <strong>wallsObjs</strong> properties (as well as its floorObj property, of course). The <span class="code">ceilingObj</span> property defines the object (defaultCeiling or defaultSky) that acts as the room's ceiling. The <span class="code">wallObjs</span> property contains a list of the rooms walls (normally [defaultNorthWall, defaultEastWall, defaultSouthWall, defaultWestWall]. These properties can be overridden as needed to remove unwanted room parts or substitute custom ones.</p>

<p>The defaultSky and defaultCeiling objects all descend from the <span class="code">Ceiling</span> class. The four default wall objects are all of the <span class="code">DefaultWall</span> class. In turn the Ceiling and DefaultWall classes are both subclasses of <span class="code">RoomPart</span>, which itself is a subclass of <span class="code">MultiLoc</span> and <span class="code">Decoration</span>. It follows that if you want to move any room parts around dynamically during a game (e.g. to remove a wall that's just been demolished) you can do so using the standard <a href="../../manual/multiloc#movingmulti">MultiLoc</a> methods such as moveIntoAdd(loc) or moveOutOf(loc).</p>

<p>You can also associate any item directly in a room with one of its room parts via that item's <strong>roomPart</strong> property, and then define a <strong>roomPartDesc</strong> that will be displayed when the associated room part is examined. Note that the item should then be located directly in the room, not the room part. For example, to implement a portrait that starts out hanging on a wall you might do something like this:</p>

 <p><div class="code"><pre>
 hall: Room 'Grand Hall'
   "This great hall is almost so grand that it's just about over the top. "
 ;
 
 + portrait: Thing 'old portrait; of[prep]; baron blunderpants picture'
     "Even his friends must have considered the old baron ugly;
      anyone else would have called him hideous, if his portrait's
      anything to go by. "
      
     initSpecialDesc = "An old portrait hangs on the west wall. "
     roomPart = defaultWestWall
     roomPartDesc = initSpecialDesc
 ; 
 </pre></div>
 
 <p>With this definition, the command EXAMINE WEST WALL will be met with the response "An old portrait hangs on the west wall." Note, however, that since the portrait is portable the player could take it; if s/he does so then the link with the west wall is automatically broken (moving the portrait with actionMoveInto() automatically resets its roomPart property to nil).</p>
 
</div>
<hr class="navb"><div class="navb">
<i>Adv3Lite Manual</i><br>
<a class="nav" href="../../docs/manual/toc.htm">Table of Contents</a> | 
<a class="nav" href="../../docs/manual/extensions.htm">Extensions</a> &gt; 
Room Parts
<br><span class="navnp"><a class="nav" href="relations.htm"><i>Prev:</i> Relations</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="rules.htm"><i>Next:</i> Rules</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
