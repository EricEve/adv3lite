<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>Weight</title>

<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="../../docs/manual/topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="../../docs/manual/toc.htm">Table of Contents</a> | 
<a class="nav" href="../../docs/manual/extensions.htm">Extensions</a> &gt; 
Weight
<br><span class="navnp"><a class="nav" href="viewport.htm"><i>Prev:</i> Viewport</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="../../docs/manual/extensions.htm"><i>Next:</i> Extensions</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<h1>Weight</h1>
<h2>Overview</h2>
<p>The standard library allows you to assign a bulk to each items and to limit what can be carried or placed in, on, under or behind other objects according to bulk. The Weight extension allows you to do the same with weight. Each item in the game (or at least, each portable item) can be assigned a weight according to whatever scale you wish, while actors and other objects can be assigned a weightCapacity which limits how much weight they can bear. These features are probably not needed for the majority of games, in which controlling by bulk is usually sufficient, but are provided in this extension for any game that wishes to make use of them. The principle difference between weight and bulk is, of course, that while the bulk of an object is simply its bulk, the weight of an object is its own weight plus the weight of all the objects it contains.</p>
<br>

<a name="properties"></a>
<h2>New Methods and Properties</h2>


<p>In addition to a number of properties intended purely for internal use, this extension defines the following methods and properties on Thing:</p>
<ul>
<li><em>Additional properties</em>: <span class="code">weight</span>, <span class="code">weightCapacity</span>, <span class="code">maxSingleWeight</span>, <span class="code">maxWeightHiddenUnder</span>, <span class="code">maxWeightHiddenBehind</span>, <span class="code">maxWeightHiddenIn</span>.</li>
<li><em>Additional methods</em>: <span class="code">totalWeight()</span>, <span class="code">getWeightWithin()</span>, <span class="code">getCarriedWeight()</span>, <span class="code">sayTooHeavy(obj)</span>, <span class="code">sayCantBearMoreWeight(obj)</span>, <span class="code">totalWeightIn(lst)</span>, <span class="code">sayTooHeavyToHide(obj, insType)</span>, <span class="code">getWeightHiddenUnder</span>, <span class="code">getWeightHiddenIn</span>, <span class="code">getWeightHiddenBehind</span>.</li>
</ul>

<a name="usage"></a>
<h2>Usage</h2>
<p>Include the weight.t file after the library files but before your game source files.</p>
 
<p>Every object (or every portable object) can be assigned a <strong>weight</strong> value, which is an integer value representing its weight on whatever scale you find convenient. This <span class="code">weight</span> represents the intrinsic weight of the object by itself, less any contents. By default every object has a <span class="code">weight</span> of 0.</p> 

<p>The total weight of an object, including its contents, is given by its <strong>totalWeight()</strong> method, while the weight of its contents (excluding the object's own weight) is given by its <strong>getWeightWithin()</strong> method. Hence for any object, <span class="code">totalWeight = weight + getWeightWithin()</span>. For actors, <strong>getCarriedWeight()</strong> gives the total weight carried by the actor; this excludes the weight of anything worn or of anything fixed in place (the latter are assumed to be body parts).</p>

<p>The carrying capacity of both actors and other objects is defined by their <strong>weightCapacity</strong> and <strong>maxSingleWeight</strong> properties. The <span class="code">weightCapacity</span> (by default 100000) is the maximum total weight that can be carried by the actor, or the maximum load that can be placed in/on/under or behind the object. The <span class="code">maxSingleWeight</span> (which by default takes its value from <span class="code">weightCapacity</span>) defines the maximum weight of a single object that can be carried by the actor or borne by the object.</p>

<p>The method <strong>sayTooHeavy(obj)</strong> is used to display a message to the effect that <em>obj</em> exceeds the load capacity of the object into or onto which an attempt is being made to place it (i.e. when the total weight of <em>obj</em> exceeds either the <span class="code">weightCapacity</span> or <span class="code">maxSingleWeight</span> of the object on which <span class="code">sayTooHeavy(obj)</span> is defined). The method <strong>sayCantBearMoreWeight(obj)</strong> is used to display a message when <em>obj</em> would otherwise cause the object's weightCapacity to be exceeded (since the addition of <em>obj</em> would make its <span class="code">getWeightWithin</span> greater than its <span class="code">weightCapacity</span>).</p>

<p>In some instances, objects can be effectively <a href="../../docs/manual/thing.htm#hidden">hidden</a> in, under or behind other objects by being added to their <span class="code">hiddenIn</span>, <span class="code">hiddenUnder</span> or <span class="code">hiddenBehind</span> lists. While in virtually every case it probably makes more sense to limit this by bulk than by weight, for the sake of completeness this extension provides <strong>maxWeightHiddenIn</strong>, <strong>maxWeightHiddenUnder</strong> and <strong>maxWeightHiddenBehind</strong> properties to limit the total weight that can be placed in, under or behind an object in this manner. The default value of all these properties is 100000. The method <strong>sayTooHeavyToHide(obj, insType)</strong> is used to display a message when hiding would cause the maximum weight to be exceeded; <em>obj</em> is the object that the player is attempting to hide and <em>insType</em> is one of <span class="code">In</span>, <span class="code">Under</span> or <span class="code">Behind</span> depending whether the action being attempted is PutIn, PutUnder or PutBehind.</p>

<p>Finally, the service method <strong>totalWeightIn(lst)</strong> is used to calculate the total weight of all the items in <em>lst</em>.</p>

<p>This covers most of what you need to know to use this extension. For additional information see the source code and comments in the <a href="../weight.t">weight.t</a> file.</p>


</div>
<hr class="navb"><div class="navb">
<i>Adv3Lite Manual</i><br>
<a class="nav" href="../../docs/manual/toc.htm">Table of Contents</a> | 
<a class="nav" href="../../docs/manual/extensions.htm">Extensions</a> &gt; 
Weight
<br><span class="navnp"><a class="nav" href="viewport.htm"><i>Prev:</i> Viewport</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="../../docs/manual/extensions.htm"><i>Next:</i> Extensions</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>
