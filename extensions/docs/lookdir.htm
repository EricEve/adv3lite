<html>
<!-- DERIVED FILE - DO NOT EDIT -->

<head>
<title>LookDir</title>

<link rel="stylesheet" href="sysman.css" type="text/css">
</head>
<body>
<div class="topbar"><img src="../../docs/manual/topbar.jpg" border=0></div>
<div class="nav">
<a class="nav" href="../../docs/manual/toc.htm">Table of Contents</a> | 
<a class="nav" href="../../docs/manual/extensions.htm">Extensions</a> &gt; 
LookDir
<br><span class="navnp"><a class="nav" href="fueled.htm"><i>Prev:</i> Fueled Light Source</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="mobilecollectivegroup.htm"><i>Next:</i> MobileCollectiveGroup</a> &nbsp;&nbsp;&nbsp; </span>

</div>
<div class="main">

<h1>LookDir</h1>
<h2>Overview</h2>

<p>The purpose of the <a href="../lookDir.t">LookDir</a> extension is to implement handling of a LookDir action that responds to commands of the form LOOK &lt;DIR&gt;, e.g., LOOK NORTH. The responses to looking in a particular direction in a particular room by defining that room's xxxLook properties, e.g. <span class='code'>northLook = "You see a long row of trees marching off to the middle distance. "</span> would define the response to LOOK NORTH in that location.</p>

<p>To use the LookDir extension you just need to include it in your build, after the adv3Lite library files. Note that a simpler way for some games to handle LOOK &lt;DIR&gt; commands might be to add &lt;DIR&gt; to certain game objects. For example, adding 'd' and 'down' to the vocab of floor objects will cause LOOK DOWN to result in the floor being examined, without any need for this extension. For more complicated cases, however, the LookDir extension may be the better option.<p>
<br>
<h2>Details</h2>
<p>With the LookDir extension added to your game, you can add xxxLook properties to Rooms to provide the responses to LOOK XXX. For example, northLook would provide the response to LOOK NORTH, southeastLook to LOOK SOUTHEAST or LOOK SE, and upLook to LOOK UP. An xxxLook property may be defined as a single-quoted or double-quoted string or a method to display some text.</p>

<p>The extension defines the <b>downLook</b> and <b>inLook</b> properties on the Room class. downlook is defined to change the action to examining the Room's floor object (<span class='code'>floorObj</span>) if there is one. inLook is defined to ask the player to provide the missing direct object to a LOOK IN command. Both these properties may, of course, be overridden in game code.</p>

<p>The other two methods this extension defines on Room are:</p>
<ul>
<li><b>lookDir(dir)</b>: This method first checks that there's enough light to see and complains that it's too dark otherwise. If there is enough light to see the method then checks whether the Room defines a non-nil <i>dir</i>Look property corresponding to <i>dir</i>. If it does, it invokes that property, otherwise it calls <span class='code'>sayNothingSpecialThatWay(dir)</span>.</li>
<li><b>sayNothingSpecialThatWay(dir)</b>: This method displays a meessage saying that there's nothing special to see in direction <i>dir</i>.</li>
</ul>
<p>There's currently only limited support for looking in a specified direction from a nested room (i.e. when the player character's location isn't their outermost room). The extension calls <span class='code'>lookDir(dir)</span> on the actor's outermost room unless the actor is in a closed opaque Booth, in which case it will be called on the Booth instead.</p>
<br>
<h2>Custom Directions</h2>
<p>Adv3Lite allows game authors to define <a href='../../docs/manual/room.htm#directions'>custom Directions</a>. If you want LOOK XXX to work with your custom direction, e.g. LOOK NNE, you need also to define a <b>lookProp</b> property on your custom Direction to hold a property pointer for the lookXXX property you want your custom Direction to work with, for example:</p>

<p><div class=code><pre>
nornoreastDir: CompassDirection
    name = 'nornoreast'
    dirProp = &amp;nornoreast
    sortingOrder = 1450
    opposite = sousouwestDir <span class="comment">//assuming you were also defining a sousouwest direction</span>
    lookProp = &amp;nornoreastLook <span class="comment">// ADD THIS to be able to use a nornoreastLook property on Rooms in your game.</span>
;

grammar directionName(nornoreast): 'nornoreast' | 'nne' : Production
    dir = nornoreastDir
;
</pre></div>

<p>In this case you may prefer to use a briefer property name, e.g., <span class='code'>lookProp = &amp;nneLook</span>.







</div>
<hr class="navb"><div class="navb">
<i>Adv3Lite Manual</i><br>
<a class="nav" href="../../docs/manual/toc.htm">Table of Contents</a> | 
<a class="nav" href="../../docs/manual/extensions.htm">Extensions</a> &gt; 
LookDir
<br><span class="navnp"><a class="nav" href="fueled.htm"><i>Prev:</i> Fueled Light Source</a> &nbsp;&nbsp;&nbsp; <a class="nav" href="mobilecollectivegroup.htm"><i>Next:</i> MobileCollectiveGroup</a> &nbsp;&nbsp;&nbsp; </span>

</div>
</body>
</html>